##### include: 会将module中的方法注入类中作为实例方法，类中有和module同名的方法时，会调用类中的方法。  

```ruby
module A
  def hello
   "come from A"
  end
end
class B
  include A
  def hello
    "come from B"
  end
end
b = B.new
p b.hello         #=>"come from B"
```

#### extend:把module中的方法注入类中作为类方法  
```ruby
module A
  def hello
   "come from A"
  end
end
class B
  extend A
  def hello
    "come from B"
  end
end
b = B.new
puts B.hello					#=>come from A
puts b.hello          #=>come from B
```
#### prepend:当类对象调用一个方法时，会先查看上层module中有没有该方法的同名方法，如果有就执行module中的同名方法，否则会在类中查找该方法，如果有就执行该方法，否则报错。当使用prepend时，module方法的执行要优先于类的实例方法。  

```ruby
module A
  def hello
   "come from A"
  end
end
class B
  prepend A
  def hello
    "come from B"
  end
end
b = B.new

puts b.hello         #=>come from A
```


