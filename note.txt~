block :
	1.可以当作方法的参数,只是这个参数不是一个表达式,而是一份完整的代码. 
	2.使用yield这个关键字即可支持所谓的方法参数,如果想支持带block参数,也可以
Proc：
	1.block的同胞，它出现的目的----能复用block.
	2.Proc实际是Ruby内置的一个类,而block只是我们称谓代码块用的简写. 
	3.一个Proc实例可以当作方法参数传递,而block更像是匿名的Proc 
block & Proc
	1. block与Proc跳出代码都使用next
	2. block与Proc都只能在方法中接受一次,也即方法不能获得多个block或Proc,若有需要可以传递一个hash或数组,得到两个Proc实例 
	3. 它们都有返回值,即最后一句代码的返回值.
-----------------------------------------------
-----------------------------------------------
lambda & Proc
	1. lambda会检查代码传递参数,而Proc不会.用自己的话说就是，如果传递的参数没有具体使用，lambda会抛异常，而Proc不会，打印出来的参数是随机值.
	2. lambda中返回使用return,从自己的方法返回，而Proc/block（有需要的用next）中不能.
	3.lambda更像一个完整的方法，只不过是匿名的.
